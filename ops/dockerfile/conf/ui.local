server {
    listen      8080;
    listen [::]:8080;
    server_name _;

    # Path to your Next.js export (contains: auth/, _next/, index.html, etc.)
    root /usr/share/nginx/html;

    # --------------------------------------------------
    # 1) Next.js runtime assets under basePath (/auth/_next)
    # --------------------------------------------------
    # Browser requests /auth/_next/... while files live at /_next/...
    # Never fall back to index.html for assets to avoid MIME errors.
    location ^~ /auth/_next/ {
        alias /usr/share/nginx/html/_next/;
        try_files $uri =404;

        # Long-term caching for hashed assets
        add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # --------------------------------------------------
    # 2) App pages under /auth  (NO prefix stripping)
    # --------------------------------------------------
    # Clean URLs: /auth/login -> /auth/login.html  (trailingSlash: false)
    # If file not found â€” return 404 (no fallback to root index.html).
    location ^~ /auth/ {
        try_files $uri $uri.html $uri/ =404;
    }

    # --------------------------------------------------
    # 3) Generic static files by extension (outside /auth/_next)
    # --------------------------------------------------
    location ~* \.(?:ico|gif|jpe?g|png|webp|woff2?|eot|otf|ttf|svg|js|css)$ {
        try_files $uri =404;
    }

    # --------------------------------------------------
    # 4) Root SPA fallback (only for root app at /, if any)
    # --------------------------------------------------
    location / {
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # --------------------------------------------------
    # 5) Health checks (JSON)
    # --------------------------------------------------
    location = /live {
        access_log off;
        default_type application/json;
        return 200 '{"status":"healthy"}';
    }

    location = /ready {
        access_log off;
        default_type application/json;
        return 200 '{"status":"ready"}';
    }
}
